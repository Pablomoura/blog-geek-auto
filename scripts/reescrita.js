const OpenAI = require("openai");
const fs = require("fs");

const openai = new OpenAI({ apiKey: "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" });

const filePath = "public/posts.json";

// üìå 1Ô∏è‚É£ Ler o JSON existente
let posts = [];
if (fs.existsSync(filePath)) {
  const rawData = fs.readFileSync(filePath, "utf-8");
  posts = JSON.parse(rawData);
}

async function reescreverNoticias() {
  for (let post of posts) {
    // üìå 2Ô∏è‚É£ Verifica se j√° foi reescrito
    if (!post.reescrito) {
      console.log(`üîÑ Reescrevendo: ${post.titulo}`);

      // üìå 3Ô∏è‚É£ Gera um novo t√≠tulo e conte√∫do usando IA
      const resposta = await openai.chat.completions.create({
        model: "gpt-4",
        messages: [{ role: "user", content: `Reescreva este t√≠tulo e texto de forma original e atrativa:\nT√≠tulo: ${post.titulo}\nTexto: ${post.texto}` }],
      });

      const textoReescrito = resposta.choices[0].message.content.split("\n");

      // üìå 4Ô∏è‚É£ Atualiza o t√≠tulo e o texto no JSON
      post.titulo = textoReescrito[0].replace("T√≠tulo: ", "").trim();
      post.texto = textoReescrito.slice(1).join("\n").replace("Texto: ", "").trim();
      post.reescrito = true;
    }
  }

  // üìå 5Ô∏è‚É£ Salva as mudan√ßas no arquivo JSON
  fs.writeFileSync(filePath, JSON.stringify(posts, null, 2));
  console.log("‚úÖ Not√≠cias reescritas e salvas!");
}

reescreverNoticias();